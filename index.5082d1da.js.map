{"mappings":"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","sources":["src/js/services/references.js","src/js/navigation-headerBtn.js","src/js/services/fetch-movies.js","src/js/pagination.js","src/js/movies-gallery.js","src/js/modal.js","src/js/search-movies.js","src/js/renderModalMovieCard.js"],"sourcesContent":["export const refs={\n    header:document.querySelector('.header'),\n    homePageBtn:document.querySelector('[data-action=\"home\"]'),\n    libraryPageBtn:document.querySelector('[data-action=\"library\"]'),\n\n    searchForm:document.querySelector('.search-form'),\n    libraryHeaderBtnBox:document.querySelector('.header-btn-wrapper'),\n\n    moviesGallery:document.querySelector('.movies-gallery'),\n    \n    outerPaginationButtonsList:document.querySelector('.pagination-list'),\n    innerPaginationButtonsList:document.querySelector('.inner-pagination-list'),\n    prevBtn:document.querySelector('[data-action=\"prev\"]'),\n    nextBtn:document.querySelector('[data-action=\"next\"]'),\n\n    modal:document.querySelector('.modal'),\n    backdrop:document.querySelector('.backdrop'),\n    wrapBox:document.querySelector('.movieCard-box'),\n    closeBtn:document.querySelector('.button-close'),\n};\n","import { refs } from \"./services/references\";\n\nrefs.homePageBtn.addEventListener('click', ()=>{\n    refs.homePageBtn.classList.add('underlined-js');\n    refs.libraryPageBtn.classList.remove('underlined-js');\n    refs.header.classList.remove('lib-header');\n    refs.searchForm.classList.remove('is-hidden');\n    refs.libraryHeaderBtnBox.classList.add('is-hidden');\n});\n\nrefs.libraryPageBtn.addEventListener('click',()=>{\n    refs.homePageBtn.classList.remove('underlined-js');\n    refs.libraryPageBtn.classList.add('underlined-js');\n    refs.header.classList.add('lib-header');\n    refs.searchForm.classList.add('is-hidden');\n    refs.libraryHeaderBtnBox.classList.remove('is-hidden');\n});\n","const URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7ab62af97d9519a1533e4099d15ee467';\n\nasync function fetchMovies(page){\n const res = await fetch(`${URL}movie/popular?api_key=${API_KEY}&page=${page}&adult=true`);\n    return await res.json();\n} \n\nasync function fetchMoviesById(movieId){\n    const res=await fetch(`${URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n    return await res.json();\n};\n\nasync function searchMovies(query){\n    const res=await fetch(`${URL}search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`)\n    return await res.json();\n}\n\nasync function fetchPopularMovies(curPage){\n    const res=await fetch(`${URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${curPage}&include_adult=false`)\n    return await res.json();\n}\n\nexport default {fetchMovies, fetchMoviesById, searchMovies, fetchPopularMovies}","import { refs } from \"./services/references\";\nimport { fetchAndRenderMainPageContent } from \"./movies-gallery\";\nimport api from './services/fetch-movies';\n\nexport  function renderPaginationMarkup(currentPage, totalPages, numAdjacentPages) {\n    let paginationMarkup = \"\";\n    \n    if(totalPages>500){\n        totalPages=500;\n    };\n\n    if (totalPages < 6) {\n    for (let i = 1; i <= totalPages; i++) {\n    paginationMarkup += createPaginationMarkupString(i);\n    }\n    }\n    \n    if (\n    totalPages > 6 &&\n    currentPage + numAdjacentPages < totalPages &&\n    totalPages - currentPage >= 6\n    ) {\n    if (currentPage < 6) {\n    for (let i = 1; i <= 6; i++) {\n    paginationMarkup += createPaginationMarkupString(i);\n    }\n    } else {\n    paginationMarkup += `${createPaginationMarkupString(1)}<span>...</span>`;\n    \n    \n      for (let i = currentPage - numAdjacentPages; i <= currentPage + numAdjacentPages; i++) {\n        paginationMarkup += `${createPaginationMarkupString(i)}`;\n      }\n    }\n    \n    paginationMarkup += `<span>...</span>${createPaginationMarkupString(totalPages)}`;\n    }\n    \n    if (totalPages > 6 && totalPages - currentPage < 6) {\n    paginationMarkup += `${createPaginationMarkupString(1)}<span>...</span>`;\n    \n    \n    for (let i = totalPages - 6; i <= totalPages; i++) {\n      paginationMarkup += createPaginationMarkupString(i);\n    }\n    }\n    \n    appendPaginationMarkup(paginationMarkup);\n\n    let paginateBtns=[...document.querySelectorAll('.paginate-btn')]\n    paginateBtns.map(btn=>{\n        if(btn.name==currentPage){\n            btn.classList.add('active-btn')\n        }\n        else{\n            btn.classList.remove('active-btn')\n        }\n    })\n    return paginationMarkup;\n    }\n    \n    // // Обработка кликов на кнопки пагинации\n    refs.innerPaginationButtonsList.addEventListener(\"click\", switchingPages);\n    \n    function switchingPages(e) {\n    refs.activePaginationBtn = refs.innerPaginationButtonsList.querySelector(\"li .active-btn\");\n    \n    const lastPaginationPage = refs.innerPaginationButtonsList.lastChild.querySelector(\".paginate-btn\");\n    let totalPages= Number(lastPaginationPage.name);\n    let currentPage = Number(e.target.name);\n    \n    if (e.target.className !== \"paginate-btn\") {\n    return;\n    }\n\n    updateUI(currentPage, totalPages, lastPaginationPage);\n}\n\nrefs.prevBtn.addEventListener('click', ()=>{\n    const lastPaginationPage = refs.innerPaginationButtonsList.lastChild.querySelector(\".paginate-btn\");\n    let activePaginateBtn=refs.innerPaginationButtonsList.getElementsByClassName(\"paginate-btn active-btn\")\n    let totalPages= Number(lastPaginationPage.name);\n    let currentPage=Number(activePaginateBtn[0].name)-1;\n\n    updateUI(currentPage, totalPages, lastPaginationPage);\n   \n})\nrefs.nextBtn.addEventListener('click', ()=>{\n    const lastPaginationPage = refs.innerPaginationButtonsList.lastChild.querySelector(\".paginate-btn\");\n    let activePaginateBtn=refs.innerPaginationButtonsList.getElementsByClassName(\"paginate-btn active-btn\")\n    let totalPages= Number(lastPaginationPage.name);\n    let currentPage=Number(activePaginateBtn[0].name)+1;\n\n    updateUI(currentPage, totalPages, lastPaginationPage);\n})\n\nfunction updateUI(currentPage, totalPages, lastPaginationPage){\n    currentPage !== 1 ? enabledPaginationBtn(refs.prevBtn) : disabledPaginationBtn(refs.prevBtn);\n    currentPage == lastPaginationPage.name ? disabledPaginationBtn(refs.nextBtn) : enabledPaginationBtn(refs.nextBtn);\n\n    refs.moviesGallery.innerHTML='';\n    fetchAndRenderMainPageContent(currentPage);\n    renderPaginationMarkup(currentPage, totalPages, 2);\n    scrollUp();\n}\n    \n    function createPaginationMarkupString(val){\n       return `<li class=\"pagination-item\"><button class=\"paginate-btn\" type=\"button\" name=\"${val}\">${val}</button></li>`\n    };\n    \n    function appendPaginationMarkup(markup){\n       refs.innerPaginationButtonsList.innerHTML=markup;\n    };\n    \n    function disabledPaginationBtn(el){\n       el.setAttribute('disabled', '');\n       el.classList.remove('paginate-btn')\n    };\n    \n    function enabledPaginationBtn(el){\n       el.removeAttribute('disabled');\n       el.classList.add('paginate-btn')\n    };\n    \n   function scrollUp() {\n    setTimeout(() => {\n        window.scrollTo({\n            top: 300,\n            behavior: 'smooth',\n         })\n    }, 100);\n    };","import { refs } from \"./services/references\";\nimport api from \"./services/fetch-movies\";\nimport { renderPaginationMarkup } from \"./pagination\";\n\nexport async function fetchAndRenderMainPageContent(page, fetch){\n await fetch(page)\n  .then(({results, total_pages})=>{ \n  refs.moviesGallery.innerHTML=createMoviesGalleryMarkup(results)\n  appendMarkup(refs.moviesGallery,results);\n  renderPaginationMarkup(page, total_pages, 2);\n  }\n  );\n};\n\nfetchAndRenderMainPageContent(1, api.fetchMovies);\n\nfunction createMoviesGalleryMarkup(items){\n  return  items.map(item=>`\n    <li class=\"movie__item\">\n    <img \n    id=\"${item.id}\"\n    class=\"movie__image\" \n    src=\"https://image.tmdb.org/t/p/w500${item.poster_path}\" \n    alt=\"${item.title}\"/>\n    <h2 class=\"movie__name\">${item.title}</h2>\n    <div class=\"movie__info-box\">\n    <p class=\"movie__info\">${item.vote_average.toFixed(1)}</p>\n    <p class=\"movie__info\">${item.release_date}</p>\n    </div>\n    </li>`).join(\"\")\n};\n\nexport function appendMarkup(selector,items){\n    selector.insertAdjacentHTML('beforeend',  createMoviesGalleryMarkup(items))\n}","import { refs } from \"./services/references\";\nimport api from \"./services/fetch-movies\";\nimport renderModalFilmCardMarkup from \"./renderModalMovieCard\";\n\nrefs.closeBtn.addEventListener('click', closeModal);\nrefs.backdrop.addEventListener('click', (e)=>{\n    e.target===refs.backdrop && closeModal();\n})\nrefs.moviesGallery.addEventListener('click', (e)=>{\n   \n    const className=e.target.className;\n    const movieId=e.target.id;\n\n    if(className!==\"movie__image\"){\n        return;\n    };\n    // запрос для получения res по id\n    api.fetchMoviesById(movieId).then(res=>{\n        refs.backdrop.classList.remove('is-hidden')\n        appendModalMarkup(res);\n    \n        // добавляю в рефы ссылки на ДОМ-узлы - кнопки модалки\n        refs.watchedBtn=document.querySelector('.btn-box > [data-action=\"watched\"]')\n        refs.queuedBtn=document.querySelector('.btn-box > [data-action=\"queued\"]')\n\n        // вешаю обработчик событий на кнопки модалки\n        refs.watchedBtn.addEventListener('click', (e)=>{\n            refs.watchedBtn.classList.toggle('active-btn');\n            \n            if(refs.watchedBtn.textContent=='Add to watched'){\n                refs.watchedBtn.textContent='Remove from watched'\n            }else{\n                refs.watchedBtn.textContent='Add to watched'\n            }\n        })\n        // вешаю обработчик событий на кнопки модалки\n        refs.queuedBtn.addEventListener('click', ()=>{\n            refs.queuedBtn.classList.toggle('active-btn');\n\n            if(refs.queuedBtn.textContent=='Add to queued'){\n                refs.queuedBtn.textContent='Remove from queued'\n            }else{\n                refs.queuedBtn.textContent='Add to queued'\n            }\n        })\n    })\n    });\n\nfunction closeModal(){\n    refs.backdrop.classList.add('is-hidden');\n    refs.wrapBox.innerHTML='';\n};\n\nfunction appendModalMarkup(item){\n    refs.wrapBox.insertAdjacentHTML('afterbegin',renderModalFilmCardMarkup(item))\n };","import api from './services/fetch-movies';\nimport { refs} from './services/references';\nimport { appendMarkup } from './movies-gallery';\nimport { renderPaginationMarkup } from './pagination';\nimport { switchingPages } from './pagination';\n\nrefs.searchForm.addEventListener('submit', (e)=>{\n    e.preventDefault();\n\n    let searchQuery=e.target.elements.searchQuery.value;\n    api.searchMovies(searchQuery)\n    .then(({results, total_pages})=>{\n        refs.moviesGallery.innerHTML='';\n        refs.innerPaginationButtonsList.innerHTML=renderPaginationMarkup(1, total_pages, 2);\n        // refs.innerPaginationButtonsList.removeEventListener('click',switchingPages)\n        appendMarkup(refs.moviesGallery, results)}) \n})\n\n","export default function renderModalFilmCardMarkup(item){\n    return `\n    <div class=\"modal-poster-box\">\n      <img class=\"modal-img\"\n        id=\"${item.id}\"\n        src=\"https://image.tmdb.org/t/p/w500${item.poster_path}\" \n        alt=\"${item.original_title}\"/>\n    </div>\n\n    <div class=\"modal-info-box\">\n        <div class=\"modal-info-wrapper\">\n\n        <h2 class=\"movie-title\">${item.original_title}</h2>\n        <p class=\"movie-about-info\">\n        Vote/Votes: \n        <span class=\"vote-average\">${(item.vote_average).toFixed(1)}</span>\n        <span>/${item.vote_count}</span>\n        </p>\n        <p class=\"movie-about-info\">Popularity: <span>${(item.popularity).toFixed(1)}</span></p>\n        <p class=\"movie-about-info\">Original Title: <span>${item.original_title}</span></p>\n        <p class=\"movie-about-info\">Genre: <span>Western</span></p>\n        <h3 class=\"subtitle\">About</h3>\n        <p class=\"movie-overview\">${item.overview}</p>\n\n        </div>\n\n        <div class=\"btn-box\">\n        <button class=\"modal-btn\" data-action=\"watched\">Add to watched</button>\n        <button class=\"modal-btn\" data-action=\"queued\">Add to queued</button>\n        </div>\n    </div>`\n};"],"names":["$4eb2ff861fd80d27$export$21666b427502ea6d","header","document","querySelector","homePageBtn","libraryPageBtn","searchForm","libraryHeaderBtnBox","moviesGallery","outerPaginationButtonsList","innerPaginationButtonsList","prevBtn","nextBtn","modal","backdrop","wrapBox","closeBtn","addEventListener","classList","add","remove","$ae75ee0cc0070290$export$2e2bcd8739ae039","async","page","res","fetch","json","movieId","query","curPage","$1bab9c519cfa82bc$export$c1930e35444d24ce","currentPage","totalPages","numAdjacentPages","paginationMarkup","i","$1bab9c519cfa82bc$var$createPaginationMarkupString","markup","innerHTML","querySelectorAll","map","btn","name","$1bab9c519cfa82bc$var$updateUI","lastPaginationPage","$1bab9c519cfa82bc$var$enabledPaginationBtn","$1bab9c519cfa82bc$var$disabledPaginationBtn","$969a51914dd5fd99$export$1383675519a926fe","setTimeout","window","scrollTo","top","behavior","val","el","setAttribute","removeAttribute","then","results","total_pages","$969a51914dd5fd99$var$createMoviesGalleryMarkup","$969a51914dd5fd99$export$db5142c0ea2dd3a1","items","item","id","poster_path","title","vote_average","toFixed","release_date","join","selector","insertAdjacentHTML","$8a7e756c566dd1ea$var$closeModal","e","activePaginationBtn","lastChild","Number","target","className","activePaginateBtn","getElementsByClassName","fetchMovies","preventDefault","searchQuery","elements","value","searchMovies","fetchMoviesById","original_title","vote_count","popularity","overview","watchedBtn","queuedBtn","toggle","textContent"],"version":3,"file":"index.5082d1da.js.map"}